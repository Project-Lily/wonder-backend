server {
    listen 80;
    listen [::]:80;
    server_name ${NGINX_DOMAIN};
    server_tokens off;

    add_header Access-Control-Allow-Origin *;
    location /.well-known/acme-challenge/ {
        allow all;
        root /var/www/certbot;
    }

    location /flask {
        return 301 https://${NGINX_DOMAIN}$request_uri;
    }
}

map $http_upgrade $connection_upgrade {  
    default upgrade;
    ''      close;
}

upstream websocket {
    server wonder-socket:3000;
}

server {
    root /var/www/data;
    include /etc/nginx/mime.types;

    listen 443 default_server ssl http2;
    listen [::]:443 ssl http2;

    server_name ${NGINX_DOMAIN};
    
    ssl_certificate /etc/letsencrypt/live/${NGINX_DOMAIN}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${NGINX_DOMAIN}/privkey.pem;

    
    location /flask/ {
        proxy_pass http://flask-utils:5000/;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
    }

    # Don't upgrade http connection, use this for normal http requests
    location /node/ {
        proxy_pass http://websocket/;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
    }

    location /socket {
        proxy_pass http://websocket;
        proxy_http_version 1.1;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
    }
    
}